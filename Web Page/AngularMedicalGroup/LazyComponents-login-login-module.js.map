{"version":3,"sources":["./src/app/LazyComponents/login/login.module.ts","./src/app/OriginRouting/login-route/login-route.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html"],"names":[],"mappings":"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","file":"LazyComponents-login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from 'src/app/login/login.component';\nimport { MaterialModule } from 'src/app/material/material.module';\nimport { FormsModule } from '@angular/forms';\nimport { LoginRouteModule } from 'src/app/OriginRouting/login-route/login-route.module';\n\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    LoginRouteModule\n  ]\n})\nexport class LoginModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from 'src/app/login/login.component';\n\nconst appRoutes:Routes=[\n  {\n    path:'',component:LoginComponent\n  }\n]\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(appRoutes)\n  ]\n})\nexport class LoginRouteModule { }\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport {ApicontactService} from '../services/apicontact.service'\r\nimport { NgForm } from '@angular/forms';\r\nimport {MatSnackBar,MatSnackBarConfig} from '@angular/material/snack-bar';\r\nimport {TokenManagerService} from '../services/token-manager.service';\r\nimport {Router} from '@angular/router';\r\nimport {CommunicateService} from '../services/communicate.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  encapsulation:ViewEncapsulation.None\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  constructor(private contact:ApicontactService,private snackBar : MatSnackBar,private tm:TokenManagerService,private router:Router,private comm:CommunicateService) {\r\n   }\r\n   config:MatSnackBarConfig={\r\n    verticalPosition:'top',\r\n    horizontalPosition:'center',\r\n    panelClass:'notification'\r\n  };\r\n  ngOnInit(): void {\r\n  }\r\n  forgotpassword():void{\r\n    this.router.navigate([\"/forgotpassword\"]);\r\n  }\r\n  login(details:NgForm){\r\n    if(details.valid){\r\n      this.comm.communicate.emit(true);\r\n    this.contact.getToken({username:details.value.username,password:details.value.password}).subscribe(r=>\r\n      {\r\n        this.tm.saveToken(r.access_token,r.role)\r\n        this.router.navigate([\"/ipa\"]);\r\n      },r=>{\r\n        this.comm.communicate.emit(false);\r\n      this.snackBar.open(\"invalid username or password\",\"x\",this.config);\r\n    });\r\n    }\r\n    else{\r\n      this.snackBar.open(\"please enter both user name and password\",\"x\",\r\n        this.config\r\n      );\r\n    }\r\n  }\r\n}\r\n","<body class=\"background-img\">\r\n<mat-toolbar color=\"warn\">\r\n    <span>Angular Medical Group</span>\r\n</mat-toolbar>\r\n    <mat-card class=\"login-card\">\r\n        <form (ngSubmit)=\"login(f)\" #f=\"ngForm\">\r\n            <mat-card-title>Login</mat-card-title>\r\n            <mat-form-field class=\"widthset\" appearance=\"outline\">\r\n                <input matInput  placeholder=\"username\" name=\"username\" required ngModel>\r\n            </mat-form-field><br>\r\n            <mat-form-field class=\"widthset\" appearance=\"outline\">\r\n                <input matInput type=\"password\" placeholder=\"password\" required name=\"password\" ngModel>\r\n            </mat-form-field><br>\r\n            <button mat-raised-button type=\"submit\" color=\"primary\">Login</button>\r\n            <button mat-button color=warn (click)=\"forgotpassword()\">Forgot Password?</button>\r\n        </form>\r\n    </mat-card>\r\n</body>"],"sourceRoot":"webpack:///"}