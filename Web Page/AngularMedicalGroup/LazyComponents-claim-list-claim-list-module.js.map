{"version":3,"sources":["./src/app/LazyComponents/claim-list/claim-list.module.ts","./src/app/ipa/claim-listing/claim-listing.component.ts","./src/app/ipa/claim-listing/claim-listing.component.html","./src/app/iparouting/claim-list/claim-listRoute.module.ts"],"names":[],"mappings":"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","file":"LazyComponents-claim-list-claim-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ClaimListingComponent} from '../../ipa/claim-listing/claim-listing.component';\nimport { MaterialModule } from 'src/app/material/material.module';\nimport {ClaimListRouteModule} from 'src/app/iparouting/claim-list/claim-listRoute.module';\n\n\n\n@NgModule({\n  declarations: [ClaimListingComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    ClaimListRouteModule\n  ]\n})\nexport class ClaimListModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ClaimsTable } from 'src/app/models/claimstable.model';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {ApicontactService} from '../../services/apicontact.service';\nimport {weblink} from '../../raw/defaultdata';\n\n@Component({\n  selector: 'app-claim-listing',\n  templateUrl: './claim-listing.component.html',\n  styleUrls: ['./claim-listing.component.css']\n})\nexport class ClaimListingComponent implements OnInit {\n  \n  displayedColumns:string[];\n  claimsData:MatTableDataSource<ClaimsTable>;\n  constructor(private api:ApicontactService) { }\n\n  ngOnInit(): void {\n    this.api.getAllClaims().subscribe(r=>{\n      this.claimsData=new MatTableDataSource<ClaimsTable>();\n      this.claimsData.data=r;\n    })\n    this.displayedColumns=[\"fileID\",\"clmid\",\"memberid\",\"membername\",\"dob\",\"renderingprovider\",\"claimNo\",\"dcn\",\"billedamount\",\"tradingPartner\",\"uploadDate\"];\n  }\n  openClaim(clmid:string){\n    const win=window.open(weblink+\"claim-view?claimid=\"+clmid,\"_blank\",\"width:\"+screen.width+\",height:\"+screen.height+\",top=0,left=0,fullscreen=yes\");\n  }\n  downloadfile(fileid:string){\n    this.api.getfiletext(fileid);\n  }\n\n}\n","<table mat-table [dataSource]=\"claimsData\" style=\"width: 100%;\">\n    <ng-container matColumnDef=\"fileID\">\n        <th align=\"center\" mat-header-cell *matHeaderCellDef>File Id</th>\n        <td mat-cell *matCellDef=\"let element\"><button (click)=\"downloadfile(element.fileID)\">{{element.fileID}}</button></td>\n    </ng-container>\n    <ng-container matColumnDef=\"clmid\">\n        <th align=\"center\" mat-header-cell *matHeaderCellDef>Sys.Claim ID</th>\n        <td mat-cell *matCellDef=\"let element\"><button (click)=\"openClaim(element.clmid)\">{{element.clmid}}</button></td>\n    </ng-container>\n    <ng-container matColumnDef=\"memberid\">\n        <th align=\"center\" mat-header-cell *matHeaderCellDef>Member ID</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.memberid}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"membername\">\n        <th align=\"center\" mat-header-cell *matHeaderCellDef>Member Name</th>\n        <td mat-cell  *matCellDef=\"let element\">{{element.membername}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"dob\">\n        <th align=\"center\" mat-header-cell *matHeaderCellDef>DOB</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.dob|date:'MM/dd/yyyy'}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"renderingprovider\">\n        <th align=\"center\" mat-header-cell *matHeaderCellDef>Rendering Provider</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.renderingprovider}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"claimNo\">\n        <th align=\"center\" mat-header-cell *matHeaderCellDef>Claim No</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.claimNo}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"dcn\">\n        <th align=\"center\" mat-header-cell *matHeaderCellDef>DCN#</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.dcn}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"billedamount\">\n        <th align=\"center\" mat-header-cell *matHeaderCellDef>Billed Ammount($)</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.billedamount}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"tradingPartner\">\n        <th align=\"center\" mat-header-cell *matHeaderCellDef>Trading Partner</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.tradingPartner}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"uploadDate\">\n        <th align=\"center\" mat-header-cell *matHeaderCellDef>Upload Date</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.uploadDate|date:'MM/dd/yyyy'}}</td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClaimListingComponent } from 'src/app/ipa/claim-listing/claim-listing.component';\n\nconst appRoutes:Routes=[\n  {\n    path:'',component:ClaimListingComponent\n  }\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(appRoutes)\n  ]\n})\nexport class ClaimListRouteModule { }\n"],"sourceRoot":"webpack:///"}