{"version":3,"sources":["./src/app/LazyComponents/registration-component/registration-component.module.ts","./src/app/ipa/registration/registration.component.ts","./src/app/ipa/registration/registration.component.html","./src/app/ipa/validators/registration-validators.service.ts","./src/app/iparouting/registraion-route/registraion-route.module.ts"],"names":[],"mappings":"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","file":"LazyComponents-registration-component-registration-component-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegistrationComponent } from 'src/app/ipa/registration/registration.component';\nimport { MaterialModule } from 'src/app/material/material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RegistraionRouteModule } from 'src/app/iparouting/registraion-route/registraion-route.module';\n\n\n\n@NgModule({\n  declarations: [RegistrationComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    RegistraionRouteModule\n  ]\n})\nexport class RegistrationComponentModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\r\nimport {ApicontactService} from '../../services/apicontact.service';\r\nimport {RegistrationValidatorsService} from '../validators/registration-validators.service';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n  registerform:FormGroup;\r\n  constructor(private api:ApicontactService,private registerValidator:RegistrationValidatorsService) { \r\n    \r\n  }\r\n  ngOnInit(): void {\r\n    this.registerform=new FormGroup({\r\n      \"username\":new FormControl('',[Validators.required],this.registerValidator.validate.bind(this.registerValidator)),\r\n      \"email\":new FormControl('',Validators.required),\r\n      \"password\":new FormControl('',[Validators.required,Validators.minLength(5)]),\r\n      \"confirmpassword\":new FormControl('',[Validators.required]),\r\n      \"role\":new FormControl('users',Validators.required)\r\n    });\r\n  }\r\n  submit(){\r\n    this.api.registerUser(this.registerform.value);\r\n  }\r\n}\r\n","<mat-card style=\"width: fit-content;margin-left:30%\">\r\n    <mat-card-title corlor=warn>Register</mat-card-title>\r\n    \r\n    <form [formGroup]=\"registerform\" (ngSubmit)=\"submit()\">\r\n    <table>\r\n            <tr>\r\n                <td align=\"right\">User Name:</td>\r\n                <td><input type=\"text\" formControlName=\"username\"></td>\r\n                <td *ngIf=\"registerform.get('username')?.errors?.usernameexist && registerform.get('username').touched\"><span color=warn style=\"color: red;\">user name already exist</span></td>\r\n                    \r\n            </tr>\r\n            <tr>\r\n                <td align=\"right\">Email:</td>\r\n                <td><input type=\"text\" formControlName=\"email\"></td>\r\n            </tr>\r\n            <tr>\r\n                <td align=\"right\">Password:</td>\r\n                <td><input type=\"password\" formControlName=\"password\"></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td align=\"right\">Confirm Password:</td>\r\n                <td><input type=\"password\" formControlName=\"confirmpassword\"></td>\r\n            </tr>\r\n            <tr>\r\n                <td align=\"right\">Role:</td>\r\n                <td>\r\n                    \r\n                    <mat-select formControlName=\"role\">\r\n                        <mat-option value=\"admin\">\r\n                        admin\r\n                        </mat-option>\r\n                        <mat-option value=\"users\">\r\n                            users\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td colspan=\"2\" align=\"center\">\r\n                    <button mat-raised-button color=warn>Submit</button>\r\n                </td>\r\n            </tr>\r\n    </table>\r\n    \r\n</form>\r\n</mat-card>\r\n","import { Injectable } from '@angular/core';\r\nimport {ApicontactService} from '../../services/apicontact.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ValidationErrors, AbstractControl } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegistrationValidatorsService {\r\n\r\n  constructor(private api:ApicontactService) { }\r\n  validate(control:AbstractControl):Observable<ValidationErrors|null>\r\n  {\r\n    return this.api.checkuser(control.value).pipe(map(r=>{\r\n      if(r){\r\n        return {\"usernameexist\":true}\r\n      }\r\n      else{\r\n        return null;\r\n      }\r\n    }\r\n      ))\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegistrationComponent } from 'src/app/ipa/registration/registration.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst appRoutes:Routes=[\n  {\n    path:'',component:RegistrationComponent\n  }\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(appRoutes)\n  ]\n})\nexport class RegistraionRouteModule { }\n"],"sourceRoot":"webpack:///"}